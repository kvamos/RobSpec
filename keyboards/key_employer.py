from telebot import types

def home_employer_keyboard():
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    keyboard.add("‚ûï –ù–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç", "üìÇ –ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã")
    keyboard.add("üë• –û—Ç–∫–ª–∏–∫–∏", "üí≥ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å")
    return keyboard



def projects_navigator_employer(current_index, total_projects, all_projects):
    # –ö–Ω–æ–ø–∫–∞ "–Ω–∞–∑–∞–¥"
    if current_index > 0:
        prev_id = all_projects[current_index - 1]
        btn_back = types.InlineKeyboardButton(
            "‚èÆÔ∏è –Ω–∞–∑–∞–¥", 
            callback_data=f"employer_project_prev_{prev_id}_{current_index-1}"
        )
    else:
        btn_back = types.InlineKeyboardButton(
            "‚èÆÔ∏è –Ω–∞–∑–∞–¥", 
            callback_data="employer_project_boundary_first"
        )
    
    # –ö–Ω–æ–ø–∫–∞ "–≤–ø–µ—Ä–µ–¥"
    if current_index < total_projects - 1:
        next_id = all_projects[current_index + 1]
        btn_next = types.InlineKeyboardButton(
            "–≤–ø–µ—Ä—ë–¥ ‚è≠Ô∏è", 
            callback_data=f"employer_project_next_{next_id}_{current_index+1}"
        )
    else:
        btn_next = types.InlineKeyboardButton(
            "–≤–ø–µ—Ä—ë–¥ ‚è≠Ô∏è", 
            callback_data="employer_project_boundary_last"
        )

    return [btn_back, btn_next]  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫