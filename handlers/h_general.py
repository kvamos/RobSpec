from telebot import types
from telebot import TeleBot
import logging
import DataBase as db
import support
import keyboards

logger = logging.getLogger(__name__)

def register_general_handlers(bot: TeleBot):
    @bot.message_handler(commands=['start' , 'home'])
    def handle_start(msg):
        try:
            if not db.user_exists(msg.from_user.id):
                bot.delete_state(msg.from_user.id, msg.chat.id)
                bot.set_state(msg.from_user.id, "add_user", msg.chat.id)
                
                message = (
                    "<b>üëã –ü—Ä–∏–≤–µ—Ç!</b> –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤ –∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π!\n\n"
                "–ó–¥–µ—Å—å <b>–∑–∞–∫–∞–∑—á–∏–∫–∏</b> –Ω–∞—Ö–æ–¥—è—Ç –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π, –∞ <b>–∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–∏</b> ‚Äî –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –∑–∞–¥–∞—á–∏.\n\n"
                "üîé <i>–î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω—ë–º!</i>\n"
                "–ö—Ç–æ –≤—ã?\n\n"
                "üëá –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ —Ä–æ–ª–µ–π:\n"
                "‚ñ™Ô∏è <b>–ó–∞–∫–∞–∑—á–∏–∫</b> ‚Äî —Ö–æ—á—É —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –ø—Ä–æ–µ–∫—Ç\n"
                "‚ñ™Ô∏è <b>–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å</b> ‚Äî –∏—â—É –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –∑–∞–¥–∞—á–∏"
                )
                
                bot.send_message(
                    msg.chat.id ,
                    message , 
                    parse_mode="HTML" ,
                    reply_markup=keyboards.role_keyboard()
                    )
                
                bot.register_next_step_handler(msg, process_role_selection)
                
            else:
                support.show_home(bot=bot , user_id=msg.from_user.id)
        
        except Exception as e:
            logger.error(f'Error in handle_start:{e}')
            

    def process_role_selection(msg):
        try:
            if msg.text not in ["üì¢ –ó–∞–∫–∞–∑—á–∏–∫", "üßë‚Äçüíª –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å"]:
                message = (
                    "<b>‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à—É —Ä–æ–ª—å:</b>\n\n"
                    "üëá –ù–∞–∂–º–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å:\n"
                    "‚ñ™Ô∏è <b>üíº –ó–∞–∫–∞–∑—á–∏–∫</b> ‚Äî —Ö–æ—á—É —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –ø—Ä–æ–µ–∫—Ç\n"
                    "‚ñ™Ô∏è <b>üõ†Ô∏è –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å</b> ‚Äî –∏—â—É –∑–∞–¥–∞—á–∏ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è"
                )
                
                bot.send_message(
                    msg.chat.id , 
                    message , 
                    parse_mode="HTML"
                    )
                
                return bot.register_next_step_handler(msg , process_role_selection)
            
            else:
                if msg.text == "üì¢ –ó–∞–∫–∞–∑—á–∏–∫":
                    bot.add_data(msg.from_user.id , msg.chat.id , role = 'employer')
                    
                else:
                    bot.add_data(msg.from_user.id , msg.chat.id , role = 'student')

                message = (
                    "<b>üìù –£–∫–∞–∂–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–∞—à–µ –§–ò–û:</b>\n"
                    "–≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç —Å–¥–µ–ª–∞—Ç—å –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å –±–æ–ª–µ–µ –Ω–∞–¥—ë–∂–Ω—ã–º –∏ –ø–æ–Ω—è—Ç–Ω—ã–º –¥–ª—è –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π."
                )

                bot.send_message(
                    msg.chat.id , 
                    message , 
                    parse_mode='HTML' ,
                    reply_markup=types.ReplyKeyboardRemove()
                    )
                
                bot.register_next_step_handler(msg , process_fullname_selection)
        
        except Exception as e:
            logger.error(f'error in process_role_selection')
    
    
    def process_fullname_selection(msg):
        try:
            fullname = msg.text.split()
            if len(fullname) < 2:
                message = (
                    "<b>‚ö†Ô∏è –ü–æ—Ö–æ–∂–µ, –≤—ã –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –§–ò–û.</b>\n\n"
                    "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ <b>–∫–∞–∫ –º–∏–Ω–∏–º—É–º –¥–≤–∞ —Å–ª–æ–≤–∞</b> ‚Äî –Ω–∞–ø—Ä–∏–º–µ—Ä: <i>–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤</i>.\n"
                    "–≠—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è –≤–∞—à–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è –∏ –¥–æ–≤–µ—Ä–∏—è —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π."
                )
                
                bot.send_message(
                    msg.chat.id , 
                    message , 
                    parse_mode='HTML'
                )
                
                return bot.register_next_step_handler(process_fullname_selection)
            
            else:
                with bot.retrieve_data(msg.from_user.id , msg.chat.id) as data:
                    
                    db.add_user(
                        user_id=msg.from_user.id , 
                        username=msg.from_user.username , 
                        full_name=msg.text , 
                        role=data['role']
                        )
                    
                    message = ''
                    
                    if data['role'] == 'employer':
                        message += (
                            "<b>üéâ –û—Ç–ª–∏—á–Ω–æ!</b>\n\n"
                            "–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∫–∞–∫ <b>üì¢ –ó–∞–∫–∞–∑—á–∏–∫</b>.\n"
                            "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ <i>—Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç</i>.\n\n"
                            "–ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ–π–¥—ë—Ç –Ω–µ —Ç–∞–∫ ‚Äî –≤—Å–µ–≥–¥–∞ –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö."
                        )
                        
                    else:
                        message += (
                            "<b>üéâ –û—Ç–ª–∏—á–Ω–æ!</b>\n\n"
                            "–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∫–∞–∫ <b>üßë‚Äçüíª –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å</b>.\n"
                            "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ <i>–∏—Å–∫–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã</i>.\n\n"
                            "–ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ–π–¥—ë—Ç –Ω–µ —Ç–∞–∫ ‚Äî –≤—Å–µ–≥–¥–∞ –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö."
                        )
                
                    bot.send_message(
                        msg.chat.id , 
                        message , 
                        parse_mode='HTML'
                    )
                    
                    support.show_home(bot=bot , user_id=msg.from_user.id)
                    
        except Exception as e:
            logger.error(f'Error in process_fullname_selection:{e}')

